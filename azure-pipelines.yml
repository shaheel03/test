trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main



stages:
  - stage: TerraformInit
    jobs:
      - job: Init
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: $(terraformVersion)

          - script: |
              terraform init \
                -backend-config="storage_account_name=$(storageAccount)" \
                -backend-config="container_name=$(containerName)" \
                -backend-config="key=$(stateFileName)" \
                -backend-config="resource_group_name=$(resourceGroup)"
            displayName: 'Initialize Terraform'

  - stage: TerraformPlan
    dependsOn: TerraformInit
    jobs:
      - job: Plan
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: $(terraformVersion)

          - script: |
              terraform plan -out=tfplan
            displayName: 'Terraform Plan'
            
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'tfplan'
              ArtifactName: 'tfplan'
            displayName: 'Publish Terraform Plan'

  - stage: TerraformApply
    dependsOn: TerraformPlan
    jobs:
      - job: Apply
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: UseTerraform@0
            inputs:
              terraformVersion: $(terraformVersion)

          - download: current
            artifact: tfplan
            displayName: 'Download Terraform Plan'

          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'
